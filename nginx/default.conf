upstream deprem {
    server web:8080;
}

map $status $status_text {
  400 'Bad Request';
  401 'Unauthorized';
  402 'Payment Required';
  403 'Forbidden';
  404 '{"error":"404","text":"hata"}';
  405 'Method Not Allowed';
  406 'Not Acceptable';
  407 'Proxy Authentication Required';
  408 'Request Timeout';
  409 'Conflict';
  410 'Gone';
  411 'Length Required';
  412 'Precondition Failed';
  413 'Payload Too Large';
  414 'URI Too Long';
  415 'Unsupported Media Type';
  416 'Range Not Satisfiable';
  417 'Expectation Failed';
  418 'I\'m a teapot';
  421 'Misdirected Request';
  422 'Unprocessable Entity';
  423 'Locked';
  424 'Failed Dependency';
  425 'Too Early';
  426 'Upgrade Required';
  428 'Precondition Required';
  429 'Too Many Requests';
  431 'Request Header Fields Too Large';
  451 'Unavailable For Legal Reasons';
  500 'Internal Server Error';
  501 'Not Implemented';
  502 '{"error":"404","text":"hata"}';
  503 'Service Unavailable';
  504 'Gateway Timeout mehmet naber';
  505 'HTTP Version Not Supported';
  506 'Variant Also Negotiates';
  507 'Insufficient Storage';
  508 'Loop Detected';
  510 'Not Extended';
  511 'Network Authentication Required';
  default 'Something is wrong';
}

server {
    listen 80;
    listen [::]:80;

    server_name test.audteye.com www.test.audteye.com;
    server_tokens off;

    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    location / {
        return 301 https://test.audteye.com$request_uri;
    }
}

server {
    autoindex on;
    listen 443 ssl http2;
    listen [::]:443 ssl http2;

    server_name audteye.com www.audteye.com;

    ssl_certificate /etc/nginx/ssl/live/audteye.com/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/live/audteye.com/privkey.pem;


    add_header X-Frame-Options "SAMEORIGIN";

    # Protects against Clickjacking attacks.
    add_header Strict-Transport-Security "max-age=0; includeSubdomains";
    # add_header Strict-Transport-Security "max-age=63072000; includeSubdomains";

    # Protects against XSS injections.
    add_header X-XSS-Protection "1; mode=block";

    # Protects against MIME-type confusion attack.
    add_header X-Content-Type-Options "nosniff";

    # CSP modern XSS directive-based defence, used since 2014.
    # add_header Content-Security-Policy "default-src 'self'; font-src *;img-src * data:; script-src *; style-src *;";

    # Prevents from leaking referrer data over insecure connections.
    add_header Referrer-Policy 'strict-origin';

    # Disable any limits to avoid HTTP 413 for large image uploads
    client_max_body_size 0;

location / {
        try_files $uri @proxy_to_app;
}

 location @proxy_to_app {
        proxy_pass http://deprem;

        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        proxy_redirect off;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Host $server_name;
}

location /dashboard {
          alias /code/audteye_dashboard;
}

    error_page 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 421 422 423 424 425 426 428 429 431 451 500 501 502 503 504 505 506 507 508 510 511 /general_error.html;
    location = /general_error.html {
        ssi on;
        internal;
        auth_basic off;
        root  /code/templates;
       }


    location /static {
        alias /code/staticfiles;

    }


    location /media {
        alias /code/media;
    }
}